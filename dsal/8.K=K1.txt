#include <iostream>
#include <vector>
using namespace std;

void OBST(vector<float> p, int n) {
    vector<vector<float>> cost(n+2, vector<float>(n+1, 0));
    vector<vector<int>> root(n+1, vector<int>(n+1, 0));

    for (int i = 1; i <= n+1; i++) cost[i][i-1] = 0;

    for (int length = 1; length <= n; length++) {
        for (int i = 1; i <= n - length + 1; i++) {
            int j = i + length - 1;
            cost[i][j] = INT_MAX;
            float sum_p = 0;
            for (int s = i; s <= j; s++) sum_p += p[s];

            for (int r = i; r <= j; r++) {
                float c = cost[i][r - 1] + cost[r + 1][j] + sum_p;
                if (c < cost[i][j]) {
                    cost[i][j] = c;
                    root[i][j] = r;
                }
            }
        }
    }

    cout << "Minimum expected cost: " << cost[1][n] << endl;
}

int main() {
    int n;
    cout << "Enter number of keys: ";
    cin >> n;

    vector<float> p(n + 1);
    cout << "Enter search probabilities (p1 to pn): ";
    for (int i = 1; i <= n; i++) cin >> p[i];

    OBST(p, n);
    return 0;
}
